package com.aqiang.dllo.mybaidumusic.tool.greenDaoToolsClass;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.aqiang.dllo.mybaidumusic.tool.greenDaoToolsClass.CollectionBean;
import com.aqiang.dllo.mybaidumusic.tool.greenDaoToolsClass.DownloadBean;
import com.aqiang.dllo.mybaidumusic.tool.greenDaoToolsClass.PlayBean;

import com.aqiang.dllo.mybaidumusic.tool.greenDaoToolsClass.CollectionBeanDao;
import com.aqiang.dllo.mybaidumusic.tool.greenDaoToolsClass.DownloadBeanDao;
import com.aqiang.dllo.mybaidumusic.tool.greenDaoToolsClass.PlayBeanDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig collectionBeanDaoConfig;
    private final DaoConfig downloadBeanDaoConfig;
    private final DaoConfig playBeanDaoConfig;

    private final CollectionBeanDao collectionBeanDao;
    private final DownloadBeanDao downloadBeanDao;
    private final PlayBeanDao playBeanDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        collectionBeanDaoConfig = daoConfigMap.get(CollectionBeanDao.class).clone();
        collectionBeanDaoConfig.initIdentityScope(type);

        downloadBeanDaoConfig = daoConfigMap.get(DownloadBeanDao.class).clone();
        downloadBeanDaoConfig.initIdentityScope(type);

        playBeanDaoConfig = daoConfigMap.get(PlayBeanDao.class).clone();
        playBeanDaoConfig.initIdentityScope(type);

        collectionBeanDao = new CollectionBeanDao(collectionBeanDaoConfig, this);
        downloadBeanDao = new DownloadBeanDao(downloadBeanDaoConfig, this);
        playBeanDao = new PlayBeanDao(playBeanDaoConfig, this);

        registerDao(CollectionBean.class, collectionBeanDao);
        registerDao(DownloadBean.class, downloadBeanDao);
        registerDao(PlayBean.class, playBeanDao);
    }
    
    public void clear() {
        collectionBeanDaoConfig.clearIdentityScope();
        downloadBeanDaoConfig.clearIdentityScope();
        playBeanDaoConfig.clearIdentityScope();
    }

    public CollectionBeanDao getCollectionBeanDao() {
        return collectionBeanDao;
    }

    public DownloadBeanDao getDownloadBeanDao() {
        return downloadBeanDao;
    }

    public PlayBeanDao getPlayBeanDao() {
        return playBeanDao;
    }

}
